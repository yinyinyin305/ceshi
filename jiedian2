trojan://tswmqssAcdphWMRdDSPZbeVSzhRVbGdp@218.78.43.205:22089?sni=cdn.savoy.click#%E4%B8%8A%E6%B5%B7%E7%94%B5%E4%BF%A1-Seattle
ss://Y2hhY2hhMjAtaWV0Zi1wb2x5MTMwNTpmQW1LSGYzRGZ0NzhaeXpMOWtZRkA0NS44My45MS42Njo4Mzg5#45.83.91.66:8389
trojan://tswmqssAcdphWMRdDSPZbeVSzhRVbGdp@183.240.181.90:60189?sni=cdn.savoy.click#%E5%B9%BF%E5%B7%9E%E7%A7%BB%E5%8A%A8-%E9%A6%99%E6%B8%AFHKT
trojan://tswmqssAcdphWMRdDSPZbeVSzhRVbGdp@101.89.213.105:22089?sni=cdn.savoy.click#%E4%B8%8A%E6%B5%B7%E7%94%B5%E4%BF%A1-Seattle
trojan://tswmqssAcdphWMRdDSPZbeVSzhRVbGdp@218.78.43.205:24089?sni=cdn.savoy.click#%E4%B8%8A%E6%B5%B7%E7%94%B5%E4%BF%A1-St%20Petersburg-Misaka
trojan://tswmqssAcdphWMRdDSPZbeVSzhRVbGdp@218.78.43.205:989?sni=cdn.savoy.click#%E4%B8%8A%E6%B5%B7%E7%94%B5%E4%BF%A1-%E5%8F%B0%E5%8C%97Hinet
trojan://tswmqssAcdphWMRdDSPZbeVSzhRVbGdp@101.89.213.105:989?sni=cdn.savoy.click#%E4%B8%8A%E6%B5%B7%E7%94%B5%E4%BF%A1-%E5%8F%B0%E5%8C%97Hinet
trojan://tswmqssAcdphWMRdDSPZbeVSzhRVbGdp@218.78.43.205:789?sni=cdn.savoy.click#%E4%B8%8A%E6%B5%B7%E7%94%B5%E4%BF%A1-US
vmess://eyJhZGQiOiJ1c2Etc2FuZnJhbmNpc2NvLmx2dWZ0LmNvbSIsImFpZCI6NCwiaG9zdCI6IiIsImlkIjoiYWJhNTBkZDQtNTQ4NC0zYjA1LWIxNGEtNDY2MWNhZjg2MmQ1IiwibmV0Ijoid3MiLCJwYXRoIjoiL3dzIiwicG9ydCI6IjQ0MyIsInBzIjoiXHVEODNDXHVEREZBXHVEODNDXHVEREY4X1VTX1x1N0Y4RVx1NTZGRCIsInRscyI6InRscyIsInR5cGUiOiJub25lIiwidiI6Mn0=
vmess://eyJhZGQiOiJ2MS5zc3JzdWIuY29tIiwiYWlkIjowLCJob3N0IjoiIiwiaWQiOiJkYThhZDEzZC0xOWU2LTRhMjgtODJhNi1kYTE1YmJjMGE5NjgiLCJuZXQiOiJ3cyIsInBhdGgiOiIvc3Nyc3ViIiwicG9ydCI6Ijg0NDMiLCJwcyI6Ilx1RDgzQ1x1RERGQVx1RDgzQ1x1RERGOF9VU19cdTdGOEVcdTU2RkQiLCJ0bHMiOiJ0bHMiLCJ0eXBlIjoibm9uZSIsInYiOjJ9
trojan://tswmqssAcdphWMRdDSPZbeVSzhRVbGdp@101.89.213.105:20089?sni=cdn.savoy.click#%E4%B8%8A%E6%B5%B7%E7%94%B5%E4%BF%A1-%E9%A6%99%E6%B8%AFEDCL
trojan://tswmqssAcdphWMRdDSPZbeVSzhRVbGdp@218.78.43.205:689?sni=cdn.savoy.click#%E4%B8%8A%E6%B5%B7%E7%94%B5%E4%BF%A1-San%20Jose-Kirino
vmess://eyJhZGQiOiIxMjkuMjI3LjIwMS4yMzQiLCJhaWQiOjQsImhvc3QiOiJhaWNvbzZkdS5jb20iLCJpZCI6ImFiYTUwZGQ0LTU0ODQtM2IwNS1iMTRhLTQ2NjFjYWY4NjJkNSIsIm5ldCI6IndzIiwicGF0aCI6Ii93cyIsInBvcnQiOiI0NDMiLCJwcyI6Ilx1RDgzQ1x1RERFRFx1RDgzQ1x1RERGMF9IS19cdTk5OTlcdTZFMkYtPlx1RDgzQ1x1RERFRVx1RDgzQ1x1RERGM19JTl9cdTUzNzBcdTVFQTYiLCJ0bHMiOiJ0bHMiLCJ0eXBlIjoibm9uZSIsInYiOjJ9
trojan://tswmqssAcdphWMRdDSPZbeVSzhRVbGdp@218.78.43.205:20089?sni=cdn.savoy.click#%E4%B8%8A%E6%B5%B7%E7%94%B5%E4%BF%A1-%E9%A6%99%E6%B8%AFEDCL
vmess://eyJhZGQiOiJjbS1qbS5va3Zwbi54eXoiLCJhaWQiOjEsImhvc3QiOiIiLCJpZCI6IjRiYjMwZTY5LWZkYWEtNDkyYy05Yzc0LWMwODI2MWQ5NTNjNyIsIm5ldCI6IndzIiwicGF0aCI6IiIsInBvcnQiOiIyMDA0OSIsInBzIjoiXHU0RTJEXHU4RjZDfFx1NjVCMFx1NTJBMFx1NTc2MVNpbmd0ZWwwNHxcdTUzNEVcdTUzNTdcdTk2QTdcdTkwNTNbXHU2RDQxXHU1QTkyXHU0RjUzXHU4OUUzXHU5NTAxXSIsInRscyI6IiIsInR5cGUiOiJub25lIiwidiI6Mn0=
vmess://eyJhZGQiOiIxOTguNDEuMjEyLjIzNCIsImFpZCI6MCwiaG9zdCI6IjIwMjItd29ybGQtMS5hLXl1Lnh5eiIsImlkIjoiYTg5MTA4MzEtZjU2Yi00YWM0LWM2OGYtZTRkZDgzZjcxZTYwIiwibmV0Ijoid3MiLCJwYXRoIjoiL3Nha3VyYS8iLCJwb3J0IjoiNDQzIiwicHMiOiJkZWZhdWx0X25hbWUiLCJ0bHMiOiJ0bHMiLCJ0eXBlIjoibm9uZSIsInYiOjJ9
ss://YWVzLTI1Ni1nY206ZzVNZUQ2RnQzQ1dsSklkQDE5OC41Ny4yNy4yMTg6NTAwMw==#198.57.27.218:5003
trojan://tswmqssAcdphWMRdDSPZbeVSzhRVbGdp@183.240.181.90:60089?sni=cdn.savoy.click#%E5%B9%BF%E5%B7%9E%E7%A7%BB%E5%8A%A8-%E9%A6%99%E6%B8%AFHKT
vmess://eyJhZGQiOiJjbS1qbS5va3Zwbi54eXoiLCJhaWQiOjEsImhvc3QiOiIiLCJpZCI6IjRiYjMwZTY5LWZkYWEtNDkyYy05Yzc0LWMwODI2MWQ5NTNjNyIsIm5ldCI6IndzIiwicGF0aCI6IiIsInBvcnQiOiIyMDAwMiIsInBzIjoiXHU0RTJEXHU4RjZDfFx1OTk5OVx1NkUyRkJHUDE0fFx1NTM0RVx1NTM1N1x1OTZBN1x1OTA1M1tcdTZENDFcdTVBOTJcdTRGNTNcdTg5RTNcdTk1MDFdIiwidGxzIjoiIiwidHlwZSI6Im5vbmUiLCJ2IjoyfQ==
vmess://eyJhZGQiOiJjbS1qbS5va3Zwbi54eXoiLCJhaWQiOjEsImhvc3QiOiIiLCJpZCI6IjRiYjMwZTY5LWZkYWEtNDkyYy05Yzc0LWMwODI2MWQ5NTNjNyIsIm5ldCI6IndzIiwicGF0aCI6IiIsInBvcnQiOiIyMDAwMSIsInBzIjoiXHU0RTJEXHU4RjZDfFx1OTk5OVx1NkUyRkhLQk4wNHxcdTUzNEVcdTUzNTdcdTk2QTdcdTkwNTNbXHU2RDQxXHU1QTkyXHU0RjUzXHU4OUUzXHU5NTAxXSIsInRscyI6IiIsInR5cGUiOiJub25lIiwidiI6Mn0=
vmess://eyJhZGQiOiJjbS1qbS5va3Zwbi54eXoiLCJhaWQiOjEsImhvc3QiOiIiLCJpZCI6IjRiYjMwZTY5LWZkYWEtNDkyYy05Yzc0LWMwODI2MWQ5NTNjNyIsIm5ldCI6IndzIiwicGF0aCI6IiIsInBvcnQiOiIyMDAwMCIsInBzIjoiXHU0RTJEXHU4RjZDfFx1OTk5OVx1NkUyRkhHQzA5fFx1NTM0RVx1NTM1N1x1OTZBN1x1OTA1MyIsInRscyI6IiIsInR5cGUiOiJub25lIiwidiI6Mn0=
vmess://eyJhZGQiOiJhaWNvbzZkdS5jb20iLCJhaWQiOjQsImhvc3QiOiJhaWNvbzZkdS5jb20iLCJpZCI6ImFiYTUwZGQ0LTU0ODQtM2IwNS1iMTRhLTQ2NjFjYWY4NjJkNSIsIm5ldCI6IndzIiwicGF0aCI6Ii93cyIsInBvcnQiOiI0NDMiLCJwcyI6Ilx1RDgzQ1x1RERFRFx1RDgzQ1x1RERGMF9IS19cdTk5OTlcdTZFMkYtPlx1RDgzQ1x1RERFRVx1RDgzQ1x1RERGM19JTl9cdTUzNzBcdTVFQTYiLCJ0bHMiOiJ0bHMiLCJ0eXBlIjoibm9uZSIsInYiOjJ9